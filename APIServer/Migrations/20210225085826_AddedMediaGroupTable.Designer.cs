// <auto-generated />
using System;
using APIServer.Areas.Content.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIServer.Migrations
{
    [DbContext(typeof(ContentContext))]
    [Migration("20210225085826_AddedMediaGroupTable")]
    partial class AddedMediaGroupTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("APIServer.Areas.Content.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CoverImageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoverImageId");

                    b.ToTable("PatricioPersonalAlbums");
                });

            modelBuilder.Entity("APIServer.Areas.Content.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SongId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.ToTable("PatricioPersonalArticles");
                });

            modelBuilder.Entity("APIServer.Areas.Content.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MediaGroupId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MediaGroupId");

                    b.ToTable("PatricioPersonalMedia");
                });

            modelBuilder.Entity("APIServer.Areas.Content.Models.MediaGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("Id");

                    b.ToTable("MediaGroup");
                });

            modelBuilder.Entity("APIServer.Areas.Content.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ImagesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImagesId");

                    b.ToTable("PatricioPersonalPosts");
                });

            modelBuilder.Entity("APIServer.Areas.Content.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int?>("AudioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsHighlight")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoundCloud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("AudioId");

                    b.ToTable("PatricioPersonalSongs");
                });

            modelBuilder.Entity("APIServer.Areas.Content.Models.Album", b =>
                {
                    b.HasOne("APIServer.Areas.Content.Models.Media", "CoverImage")
                        .WithMany()
                        .HasForeignKey("CoverImageId");

                    b.Navigation("CoverImage");
                });

            modelBuilder.Entity("APIServer.Areas.Content.Models.Article", b =>
                {
                    b.HasOne("APIServer.Areas.Content.Models.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongId");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("APIServer.Areas.Content.Models.Media", b =>
                {
                    b.HasOne("APIServer.Areas.Content.Models.MediaGroup", null)
                        .WithMany("Media")
                        .HasForeignKey("MediaGroupId");
                });

            modelBuilder.Entity("APIServer.Areas.Content.Models.Post", b =>
                {
                    b.HasOne("APIServer.Areas.Content.Models.MediaGroup", "Images")
                        .WithMany()
                        .HasForeignKey("ImagesId");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("APIServer.Areas.Content.Models.Song", b =>
                {
                    b.HasOne("APIServer.Areas.Content.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId");

                    b.HasOne("APIServer.Areas.Content.Models.Media", "Audio")
                        .WithMany()
                        .HasForeignKey("AudioId");

                    b.Navigation("Album");

                    b.Navigation("Audio");
                });

            modelBuilder.Entity("APIServer.Areas.Content.Models.Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("APIServer.Areas.Content.Models.MediaGroup", b =>
                {
                    b.Navigation("Media");
                });
#pragma warning restore 612, 618
        }
    }
}
