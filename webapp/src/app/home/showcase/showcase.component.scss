@use 'src/assets/scss/theme.scss' as theme;

:host {
    display: block;
    background-color: map-get(theme.$palettes, white);
}

app-quick-player { 
    height: 45vh;
}

p, span {
    margin: 0;
    pointer-events: none;
}

.title {
    margin-bottom: map-get(theme.$spacing, std);
}

.info {
    position: inherit;
    width: 100%;
    height: 100%;

    display: flex;
}

.oversize .info {
    align-items: flex-end;
}

.large .subtitle {
    text-align: end;
}

.large .info, .wide .info {
    flex-direction: column;
    justify-content: space-between;
}

.small .info {
    justify-content: flex-end;
    align-items: flex-end;
}

.split {
    margin: 0 24px;
}

.subtitle {
    font-size: calc(18rem / #{map-get(theme.$text, std)});
}

.grid {
    $gap: 12px;
    // For .small to be square, it's width ratio divides it's height ratio. So (3/12) / (4/12) = 0.75.
    $sqr-ratio: 0.75;
    $offset: map-get(theme.$spacing, page-wide) * 2 + theme.$scrollbar;
    // gap is ignored in height calculation, so we need to remove it.
    // It's likely caused by "box-sizing: border-box" on all;
    height: calc((100vw - #{$offset}) * #{$sqr-ratio} - (#{$gap} * 3));
    // margin: 0 map-get(theme.$spacing, page-wide);

    display: grid;
    grid-template-rows: repeat(12, 1fr);
    grid-template-columns: repeat(12, 1fr);
    grid-gap: $gap;
    gap: $gap;

    & > app-quick-player { height: 100%; }

    & > .oversize { 
        grid-area: auto / auto / span 6 / span 8;
        font-size: calc(36rem / #{map-get(theme.$text, std)});
    }

    & > .large { grid-area: auto / auto / span 6 / span 4; }

    & > .wide { 
        grid-area: auto / auto / span 2 / span 4;
        font-size: calc(24rem / #{map-get(theme.$text, std)});
    }

    & > .small {
        grid-area: auto / auto / span 4 / span 3;
        font-size: calc(24rem / #{map-get(theme.$text, std)});
    }
}